---
name: Docker Hardfork CI

on:
  push:
    branches:
      - '*'

jobs:
  build-testnet:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Update submodules
      run: |
        git submodule update --init --recursive
        echo "Building testnet image"

    - name: Export variables
      run: |
        echo "HF_VERSION=$(ls libraries/chain/hardfork.testnet.d | tr -d '.hf' | tr -d '0_' | sort -nr | head -n1)" >> $GITHUB_ENV
        echo "GIT_COMMIT=$(git rev-parse --short HEAD || echo "GitNotFound")" >> $GITHUB_ENV
        echo "LIVE_TESTNET=ON" >> $GITHUB_ENV
        echo "NET_NAME=testnet" >> $GITHUB_ENV
      
    - name: Show variables
      run: |
        printf "HF_VERSION=$HF_VERSION \nGIT_COMMIT=$GIT_COMMIT \nLIVE_TESTNET=$LIVE_TESTNET \nNET_NAME=$NET_NAME"

    - name: Build the Docker image
      run: |
        docker build \
        --build-arg BRANCH_NAME=testnet \
        --build-arg GIT_COMMIT=${GIT_COMMIT} \
        --build-arg LIVE_TESTNET=${LIVE_TESTNET} \
        --build-arg BUILD_VERSION=0.${HF_VERSION}.0.${GIT_COMMIT} \
        -t "scorum/${NET_NAME}:0.${HF_VERSION}.0.${GIT_COMMIT}" .

    - name: Push docker image to registry
      if: github.ref == 'refs/heads/develop'
      run: docker push scorum/${NET_NAME}:0.${HF_VERSION}.0.${GIT_COMMIT}

  build-mainnet:
    runs-on: self-hosted

    if: startsWith(github.ref, 'refs/heads/master')

    steps:
    - uses: actions/checkout@v3

    - name: Update submodules
      run: |
        git submodule update --init --recursive
        echo "Building mainnet image"

    - name: Export variables
      run: |
        echo "HF_VERSION=$(ls libraries/chain/hardfork.d | tr -d '.hf' | tr -d '0_' | sort -nr | head -n1)" >> $GITHUB_ENV
        echo "GIT_COMMIT=$(git rev-parse --short HEAD || echo "GitNotFound")" >> $GITHUB_ENV
        echo "LIVE_TESTNET=OFF" >> $GITHUB_ENV
        echo "NET_NAME=release" >> $GITHUB_ENV

    - name: Show variables
      run: |
        printf "HF_VERSION=$HF_VERSION \nGIT_COMMIT=$GIT_COMMIT \nLIVE_TESTNET=$LIVE_TESTNET \nNET_NAME=$NET_NAME"

    - name: Build the Docker image
      run: |
        docker build \
          --build-arg BRANCH_NAME=master \
          --build-arg GIT_COMMIT=${GIT_COMMIT} \
          --build-arg LIVE_TESTNET=${LIVE_TESTNET} \
          --build-arg BUILD_VERSION=0.${HF_VERSION}.0.${GIT_COMMIT} \
          -t "scorum/release:0.${HF_VERSION}.0.${GIT_COMMIT}" .

    - name: Push docker image to registry
      run: docker push scorum/${NET_NAME}:0.${HF_VERSION}.0.${GIT_COMMIT}
